#define Histobook_cxx
#include "Histobook.h"
#include <TH2.h>
#include <TStyle.h>
#include <TCanvas.h>
#include <TF1.h>
#include <TH1D.h>

#include <TProfile.h>
#include <TRandom.h>
#include <iostream>
#include <vector>
#include <stdio.h>
#include "TVector3.h"
#include "TMath.h"

void Histobook::Loop()
{
//   In a ROOT session, you can do:
//      Root > .L Histobook.C
//      Root > Histobook t
//      Root > t.GetEntry(12); // Fill t data members with entry number 12
//      Root > t.Show();       // Show values of entry 12
//      Root > t.Show(16);     // Read and show values of entry 16
//      Root > t.Loop();       // Loop on all entries
//

//     This is the loop skeleton where:
//    jentry is the global entry number in the chain
//    ientry is the entry number in the current Tree
//  Note that the argument to GetEntry must be:
//    jentry for TChain::GetEntry
//    ientry for TTree::GetEntry and TBranch::GetEntry
//
//       To read only selected branches, Insert statements like:
// METHOD1:
//    fChain->SetBranchStatus("*",0);  // disable all branches
//    fChain->SetBranchStatus("branchname",1);  // activate branchname
// METHOD2: replace line
//    fChain->GetEntry(jentry);       //read all branches
//by  b_branchname->GetEntry(ientry); //read only this branch
   const int numLayers = 56;
   TH2F* notches[numLayers];
   for( int i = 0; i < numLayers; ++i ){
      notches[i] = new TH2F(TString::Format("Layer: %d",i),TString::Format("Layer: %d",i),400,.88,1.04,
       400,-0.02-.03*i/56,0.04-.03*i/56);
   }

   if (fChain == 0) return;

   Long64_t nentries = fChain->GetEntriesFast();

   Long64_t nbytes = 0, nb = 0;
   for (Long64_t jentry=0; jentry<500000;jentry++) {
      Long64_t ientry = LoadTree(jentry);
      if (ientry < 0) break;
      nb = fChain->GetEntry(jentry);   nbytes += nb;
      // if (Cut(ientry) < 0) continue;
      for (int i = 0;i < hNHits;++i) {
          notches[hLayer[i]]->Fill(hNDoca[i], hEnta[i]);
      }
   }
   TCanvas *Layer0 = new TCanvas("Layer0", "Layer0", 3000,1000);
   Layer0->Divide(7,3);
   for( int i = 0; i < 21; ++i ){
      Layer0-> cd(i+1);
      notches[i]->Draw();
   }
   //Layer0->SaveAs("notches_0to20.pdf");
   TCanvas *Layer1 = new TCanvas("Layer1", "Layer1", 3000,1000);
   LayEr->Divide(7,3);
   for( int i = 0; i < 21; ++i ){
      Layer1-> cd(i+1);
      notches[i+21]->Draw();
   }
   //Layer1->SaveAs("notches_21to41.pdf");
   TCanvas *Layer2 = new TCanvas("Layer2", "Layer2",3000,750);
   Layer2->Divide(7,2);
   for( int i = 0; i < 14; ++i ){
      Layer2-> cd(i+1);
      notches[i+42]->Draw();
   }
   //Layer2->SaveAs("notches_42to55.pdf");
}

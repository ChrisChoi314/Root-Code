//
// File generated by /usr/bin/rootcint at Mon Jun  6 14:25:44 2022

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIminyeoncdIDesktopdICodedITryit_C_ACLiC_dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Tryit_C_ACLiC_dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Tryit Tryit;
      #else
      class Tryit  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~Tryit() throw() {};
         ::TTree* fChain; //!pointer to the analyzed TTree or TChain
         int fCurrent; //!current Tree number in a TChain
         int exp; //
         int run; //
         int event; //
         double d0; //
         double z0; //
         double dz; //
         double dr; //
         double dphi; //
         double vx0; //
         double vy0; //
         double vz0; //
         double tanlambda; //
         double phi0; //
         double chi2; //
         double nCDChits; //
         int inCDC; //
         int track; //
         double length; //
         int charge; //
         double costh; //
         double pF; //
         double p; //
         double pt; //
         double ioasym; //
         double phi; //
         double pdg; //
         double mean; //
         double dedx; //
         double dedxnosat; //
         double dedxerr; //
         double eop; //
         double e; //
         double e1_9; //
         double e9_21; //
         int klmLayers; //
         double scale; //
         double coscor; //
         double cosedgecor; //
         double rungain; //
         double chiE; //
         double chiMu; //
         double chiPi; //
         double chiK; //
         double chiP; //
         double chiD; //
         double pmeanE; //
         double pmeanMu; //
         double pmeanPi; //
         double pmeanK; //
         double pmeanP; //
         double pmeanD; //
         double presE; //
         double presMu; //
         double presPi; //
         double presK; //
         double presP; //
         double presD; //
         int lNHits; //
         int lNHitsUsed; //
         int lNHitsCombined[55]; //[lNHits]
         int lWireLongestHit[55]; //[lNHits]
         int lLayer[55]; //[lNHits]
         double lPath[55]; //[lNHits]
         double lDedx[55]; //[lNHits]
         int hNHits; //
         int hLWire[110]; //[hNHits]
         int hWire[110]; //[hNHits]
         int hLayer[110]; //[hNHits]
         double hPath[110]; //[hNHits]
         double hDedx[110]; //[hNHits]
         double hADCRaw[110]; //[hNHits]
         double hADCCorr[110]; //[hNHits]
         double hDoca[110]; //[hNHits]
         double hNDoca[110]; //[hNHits]
         double hNDocaRS[110]; //[hNHits]
         double hEnta[110]; //[hNHits]
         double hEntaRS[110]; //[hNHits]
         double hDriftT[110]; //[hNHits]
         double hDriftD[110]; //[hNHits]
         double hFacnlADC[110]; //[hNHits]
         double hWireGain[110]; //[hNHits]
         double hTwodcor[110]; //[hNHits]
         double hOnedcor[110]; //[hNHits]
         ::TBranch* b_exp; //!
         ::TBranch* b_run; //!
         ::TBranch* b_event; //!
         ::TBranch* b_d0; //!
         ::TBranch* b_z0; //!
         ::TBranch* b_dz; //!
         ::TBranch* b_dr; //!
         ::TBranch* b_dphi; //!
         ::TBranch* b_vx0; //!
         ::TBranch* b_vy0; //!
         ::TBranch* b_vz0; //!
         ::TBranch* b_tanlambda; //!
         ::TBranch* b_phi0; //!
         ::TBranch* b_chi2; //!
         ::TBranch* b_nCDChits; //!
         ::TBranch* b_inCDC; //!
         ::TBranch* b_track; //!
         ::TBranch* b_length; //!
         ::TBranch* b_charge; //!
         ::TBranch* b_costh; //!
         ::TBranch* b_pF; //!
         ::TBranch* b_p; //!
         ::TBranch* b_pt; //!
         ::TBranch* b_ioasym; //!
         ::TBranch* b_phi; //!
         ::TBranch* b_pdg; //!
         ::TBranch* b_mean; //!
         ::TBranch* b_dedx; //!
         ::TBranch* b_dedxnosat; //!
         ::TBranch* b_dedxerr; //!
         ::TBranch* b_eop; //!
         ::TBranch* b_e; //!
         ::TBranch* b_e1_9; //!
         ::TBranch* b_e9_21; //!
         ::TBranch* b_klmLayers; //!
         ::TBranch* b_scale; //!
         ::TBranch* b_coscor; //!
         ::TBranch* b_cosedgecor; //!
         ::TBranch* b_rungain; //!
         ::TBranch* b_chiE; //!
         ::TBranch* b_chiMu; //!
         ::TBranch* b_chiPi; //!
         ::TBranch* b_chiK; //!
         ::TBranch* b_chiP; //!
         ::TBranch* b_chiD; //!
         ::TBranch* b_pmeanE; //!
         ::TBranch* b_pmeanMu; //!
         ::TBranch* b_pmeanPi; //!
         ::TBranch* b_pmeanK; //!
         ::TBranch* b_pmeanP; //!
         ::TBranch* b_pmeanD; //!
         ::TBranch* b_presE; //!
         ::TBranch* b_presMu; //!
         ::TBranch* b_presPi; //!
         ::TBranch* b_presK; //!
         ::TBranch* b_presP; //!
         ::TBranch* b_presD; //!
         ::TBranch* b_lNHits; //!
         ::TBranch* b_lNHitsUsed; //!
         ::TBranch* b_lNHitsCombined; //!
         ::TBranch* b_lWireLongestHit; //!
         ::TBranch* b_lLayer; //!
         ::TBranch* b_lPath; //!
         ::TBranch* b_lDedx; //!
         ::TBranch* b_hNHits; //!
         ::TBranch* b_hLWire; //!
         ::TBranch* b_hWire; //!
         ::TBranch* b_hLayer; //!
         ::TBranch* b_hPath; //!
         ::TBranch* b_hDedx; //!
         ::TBranch* b_hADCRaw; //!
         ::TBranch* b_hADCCorr; //!
         ::TBranch* b_hDoca; //!
         ::TBranch* b_hNDoca; //!
         ::TBranch* b_hNDocaRS; //!
         ::TBranch* b_hEnta; //!
         ::TBranch* b_hEntaRS; //!
         ::TBranch* b_hDriftT; //!
         ::TBranch* b_hDriftD; //!
         ::TBranch* b_hFacnlADC; //!
         ::TBranch* b_hWireGain; //!
         ::TBranch* b_hTwodcor; //!
         ::TBranch* b_hOnedcor; //!
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void Tryit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Tryit_Dictionary();
   static void *new_Tryit(void *p = 0);
   static void *newArray_Tryit(Long_t size, void *p);
   static void delete_Tryit(void *p);
   static void deleteArray_Tryit(void *p);
   static void destruct_Tryit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Tryit*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Tryit) == sizeof( ::ROOTShadow::Shadow::Tryit));
      ::Tryit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Tryit),0);
      static ::ROOT::TGenericClassInfo 
         instance("Tryit", "/home/minyeonc/Desktop/Code/./Tryit.h", 19,
                  typeid(::Tryit), ::ROOT::DefineBehavior(ptr, ptr),
                  &Tryit_ShowMembers, &Tryit_Dictionary, isa_proxy, 4,
                  sizeof(::Tryit) );
      instance.SetNew(&new_Tryit);
      instance.SetNewArray(&newArray_Tryit);
      instance.SetDelete(&delete_Tryit);
      instance.SetDeleteArray(&deleteArray_Tryit);
      instance.SetDestructor(&destruct_Tryit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Tryit*)
   {
      return GenerateInitInstanceLocal((::Tryit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Tryit*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Tryit_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Tryit*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

//______________________________________________________________________________
namespace ROOTDict {
   void Tryit_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Tryit.
      typedef ::ROOTShadow::Shadow::Tryit ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Tryit*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &sobj->fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &sobj->fCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "exp", &sobj->exp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &sobj->run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event", &sobj->event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d0", &sobj->d0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z0", &sobj->z0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dz", &sobj->dz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dr", &sobj->dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dphi", &sobj->dphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx0", &sobj->vx0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vy0", &sobj->vy0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vz0", &sobj->vz0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tanlambda", &sobj->tanlambda);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi0", &sobj->phi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2", &sobj->chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nCDChits", &sobj->nCDChits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inCDC", &sobj->inCDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "track", &sobj->track);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "length", &sobj->length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &sobj->charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "costh", &sobj->costh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pF", &sobj->pF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p", &sobj->p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &sobj->pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ioasym", &sobj->ioasym);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &sobj->phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdg", &sobj->pdg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mean", &sobj->mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dedx", &sobj->dedx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dedxnosat", &sobj->dedxnosat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dedxerr", &sobj->dedxerr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eop", &sobj->eop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "e", &sobj->e);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "e1_9", &sobj->e1_9);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "e9_21", &sobj->e9_21);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "klmLayers", &sobj->klmLayers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scale", &sobj->scale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coscor", &sobj->coscor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cosedgecor", &sobj->cosedgecor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rungain", &sobj->rungain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chiE", &sobj->chiE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chiMu", &sobj->chiMu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chiPi", &sobj->chiPi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chiK", &sobj->chiK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chiP", &sobj->chiP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chiD", &sobj->chiD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmeanE", &sobj->pmeanE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmeanMu", &sobj->pmeanMu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmeanPi", &sobj->pmeanPi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmeanK", &sobj->pmeanK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmeanP", &sobj->pmeanP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmeanD", &sobj->pmeanD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "presE", &sobj->presE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "presMu", &sobj->presMu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "presPi", &sobj->presPi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "presK", &sobj->presK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "presP", &sobj->presP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "presD", &sobj->presD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lNHits", &sobj->lNHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lNHitsUsed", &sobj->lNHitsUsed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lNHitsCombined[55]", sobj->lNHitsCombined);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lWireLongestHit[55]", sobj->lWireLongestHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lLayer[55]", sobj->lLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lPath[55]", sobj->lPath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lDedx[55]", sobj->lDedx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNHits", &sobj->hNHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hLWire[110]", sobj->hLWire);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hWire[110]", sobj->hWire);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hLayer[110]", sobj->hLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hPath[110]", sobj->hPath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hDedx[110]", sobj->hDedx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hADCRaw[110]", sobj->hADCRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hADCCorr[110]", sobj->hADCCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hDoca[110]", sobj->hDoca);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNDoca[110]", sobj->hNDoca);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNDocaRS[110]", sobj->hNDocaRS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hEnta[110]", sobj->hEnta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hEntaRS[110]", sobj->hEntaRS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hDriftT[110]", sobj->hDriftT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hDriftD[110]", sobj->hDriftD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hFacnlADC[110]", sobj->hFacnlADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hWireGain[110]", sobj->hWireGain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hTwodcor[110]", sobj->hTwodcor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hOnedcor[110]", sobj->hOnedcor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_exp", &sobj->b_exp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_run", &sobj->b_run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_event", &sobj->b_event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_d0", &sobj->b_d0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_z0", &sobj->b_z0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dz", &sobj->b_dz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dr", &sobj->b_dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dphi", &sobj->b_dphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_vx0", &sobj->b_vx0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_vy0", &sobj->b_vy0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_vz0", &sobj->b_vz0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_tanlambda", &sobj->b_tanlambda);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_phi0", &sobj->b_phi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_chi2", &sobj->b_chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_nCDChits", &sobj->b_nCDChits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_inCDC", &sobj->b_inCDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_track", &sobj->b_track);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_length", &sobj->b_length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_charge", &sobj->b_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_costh", &sobj->b_costh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_pF", &sobj->b_pF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_p", &sobj->b_p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_pt", &sobj->b_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ioasym", &sobj->b_ioasym);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_phi", &sobj->b_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_pdg", &sobj->b_pdg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mean", &sobj->b_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dedx", &sobj->b_dedx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dedxnosat", &sobj->b_dedxnosat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_dedxerr", &sobj->b_dedxerr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_eop", &sobj->b_eop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_e", &sobj->b_e);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_e1_9", &sobj->b_e1_9);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_e9_21", &sobj->b_e9_21);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_klmLayers", &sobj->b_klmLayers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_scale", &sobj->b_scale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_coscor", &sobj->b_coscor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_cosedgecor", &sobj->b_cosedgecor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_rungain", &sobj->b_rungain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_chiE", &sobj->b_chiE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_chiMu", &sobj->b_chiMu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_chiPi", &sobj->b_chiPi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_chiK", &sobj->b_chiK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_chiP", &sobj->b_chiP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_chiD", &sobj->b_chiD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_pmeanE", &sobj->b_pmeanE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_pmeanMu", &sobj->b_pmeanMu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_pmeanPi", &sobj->b_pmeanPi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_pmeanK", &sobj->b_pmeanK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_pmeanP", &sobj->b_pmeanP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_pmeanD", &sobj->b_pmeanD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_presE", &sobj->b_presE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_presMu", &sobj->b_presMu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_presPi", &sobj->b_presPi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_presK", &sobj->b_presK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_presP", &sobj->b_presP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_presD", &sobj->b_presD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_lNHits", &sobj->b_lNHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_lNHitsUsed", &sobj->b_lNHitsUsed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_lNHitsCombined", &sobj->b_lNHitsCombined);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_lWireLongestHit", &sobj->b_lWireLongestHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_lLayer", &sobj->b_lLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_lPath", &sobj->b_lPath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_lDedx", &sobj->b_lDedx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_hNHits", &sobj->b_hNHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_hLWire", &sobj->b_hLWire);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_hWire", &sobj->b_hWire);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_hLayer", &sobj->b_hLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_hPath", &sobj->b_hPath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_hDedx", &sobj->b_hDedx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_hADCRaw", &sobj->b_hADCRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_hADCCorr", &sobj->b_hADCCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_hDoca", &sobj->b_hDoca);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_hNDoca", &sobj->b_hNDoca);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_hNDocaRS", &sobj->b_hNDocaRS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_hEnta", &sobj->b_hEnta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_hEntaRS", &sobj->b_hEntaRS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_hDriftT", &sobj->b_hDriftT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_hDriftD", &sobj->b_hDriftD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_hFacnlADC", &sobj->b_hFacnlADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_hWireGain", &sobj->b_hWireGain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_hTwodcor", &sobj->b_hTwodcor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_hOnedcor", &sobj->b_hOnedcor);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Tryit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Tryit : new ::Tryit;
   }
   static void *newArray_Tryit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Tryit[nElements] : new ::Tryit[nElements];
   }
   // Wrapper around operator delete
   static void delete_Tryit(void *p) {
      delete ((::Tryit*)p);
   }
   static void deleteArray_Tryit(void *p) {
      delete [] ((::Tryit*)p);
   }
   static void destruct_Tryit(void *p) {
      typedef ::Tryit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Tryit

/********************************************************
* /home/minyeonc/Desktop/Code/Tryit_C_ACLiC_dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTryit_C_ACLiC_dict();

extern "C" void G__set_cpp_environmentTryit_C_ACLiC_dict() {
  G__cpp_reset_tagtableTryit_C_ACLiC_dict();
}
#include <new>
extern "C" int G__cpp_dllrevTryit_C_ACLiC_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Tryit */
static int G__Tryit_C_ACLiC_dict_2968_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tryit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tryit((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) Tryit((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Tryit[n];
       } else {
         p = new((void*) gvp) Tryit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Tryit;
       } else {
         p = new((void*) gvp) Tryit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_Tryit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tryit_C_ACLiC_dict_2968_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Tryit*) G__getstructoffset())->Cut((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tryit_C_ACLiC_dict_2968_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Tryit*) G__getstructoffset())->GetEntry((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tryit_C_ACLiC_dict_2968_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((Tryit*) G__getstructoffset())->LoadTree((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tryit_C_ACLiC_dict_2968_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tryit*) G__getstructoffset())->Init((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tryit_C_ACLiC_dict_2968_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tryit*) G__getstructoffset())->Loop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tryit_C_ACLiC_dict_2968_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Tryit*) G__getstructoffset())->Notify());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tryit_C_ACLiC_dict_2968_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Tryit*) G__getstructoffset())->Show((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Tryit*) G__getstructoffset())->Show();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Tryit_C_ACLiC_dict_2968_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Tryit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Tryit(*(Tryit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_Tryit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Tryit G__TTryit;
static int G__Tryit_C_ACLiC_dict_2968_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Tryit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Tryit*) (soff+(sizeof(Tryit)*i)))->~G__TTryit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Tryit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Tryit*) (soff))->~G__TTryit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Tryit_C_ACLiC_dict_2968_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tryit* dest = (Tryit*) G__getstructoffset();
   *dest = *(Tryit*) libp->para[0].ref;
   const Tryit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Tryit */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTryit_C_ACLiC_dict {
 public:
  G__Sizep2memfuncTryit_C_ACLiC_dict(): p(&G__Sizep2memfuncTryit_C_ACLiC_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTryit_C_ACLiC_dict::*p)();
};

size_t G__get_sizep2memfuncTryit_C_ACLiC_dict()
{
  G__Sizep2memfuncTryit_C_ACLiC_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTryit_C_ACLiC_dict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTryit_C_ACLiC_dict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Tryit */
static void G__setup_memvarTryit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_Tryit));
   { Tryit *p; p=(Tryit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fChain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TTree),-1,-1,1,"fChain=",0,"!pointer to the analyzed TTree or TChain");
   G__memvar_setup((void*)((long)(&p->fCurrent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fCurrent=",0,"!current Tree number in a TChain");
   G__memvar_setup((void*)((long)(&p->exp)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"exp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->event)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"event=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->d0)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"d0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z0)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"z0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"dz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dr)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"dr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dphi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"dphi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vx0)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"vx0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vy0)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"vy0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vz0)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"vz0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tanlambda)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tanlambda=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi0)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"phi0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chi2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"chi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nCDChits)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"nCDChits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inCDC)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"inCDC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->track)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"track=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->length)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"length=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->charge)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->costh)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"costh=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pF)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"p=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ioasym)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ioasym=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdg)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pdg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mean)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"mean=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dedx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"dedx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dedxnosat)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"dedxnosat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dedxerr)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"dedxerr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eop)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"eop=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->e)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"e=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->e1_9)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"e1_9=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->e9_21)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"e9_21=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->klmLayers)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"klmLayers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scale)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"scale=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->coscor)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"coscor=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cosedgecor)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"cosedgecor=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rungain)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"rungain=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chiE)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"chiE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chiMu)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"chiMu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chiPi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"chiPi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chiK)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"chiK=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chiP)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"chiP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chiD)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"chiD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pmeanE)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pmeanE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pmeanMu)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pmeanMu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pmeanPi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pmeanPi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pmeanK)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pmeanK=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pmeanP)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pmeanP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pmeanD)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pmeanD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->presE)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"presE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->presMu)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"presMu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->presPi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"presPi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->presK)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"presK=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->presP)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"presP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->presD)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"presD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lNHits)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"lNHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lNHitsUsed)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"lNHitsUsed=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lNHitsCombined)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"lNHitsCombined[55]=",0,"[lNHits]");
   G__memvar_setup((void*)((long)(&p->lWireLongestHit)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"lWireLongestHit[55]=",0,"[lNHits]");
   G__memvar_setup((void*)((long)(&p->lLayer)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"lLayer[55]=",0,"[lNHits]");
   G__memvar_setup((void*)((long)(&p->lPath)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"lPath[55]=",0,"[lNHits]");
   G__memvar_setup((void*)((long)(&p->lDedx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"lDedx[55]=",0,"[lNHits]");
   G__memvar_setup((void*)((long)(&p->hNHits)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"hNHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hLWire)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"hLWire[110]=",0,"[hNHits]");
   G__memvar_setup((void*)((long)(&p->hWire)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"hWire[110]=",0,"[hNHits]");
   G__memvar_setup((void*)((long)(&p->hLayer)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"hLayer[110]=",0,"[hNHits]");
   G__memvar_setup((void*)((long)(&p->hPath)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"hPath[110]=",0,"[hNHits]");
   G__memvar_setup((void*)((long)(&p->hDedx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"hDedx[110]=",0,"[hNHits]");
   G__memvar_setup((void*)((long)(&p->hADCRaw)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"hADCRaw[110]=",0,"[hNHits]");
   G__memvar_setup((void*)((long)(&p->hADCCorr)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"hADCCorr[110]=",0,"[hNHits]");
   G__memvar_setup((void*)((long)(&p->hDoca)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"hDoca[110]=",0,"[hNHits]");
   G__memvar_setup((void*)((long)(&p->hNDoca)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"hNDoca[110]=",0,"[hNHits]");
   G__memvar_setup((void*)((long)(&p->hNDocaRS)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"hNDocaRS[110]=",0,"[hNHits]");
   G__memvar_setup((void*)((long)(&p->hEnta)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"hEnta[110]=",0,"[hNHits]");
   G__memvar_setup((void*)((long)(&p->hEntaRS)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"hEntaRS[110]=",0,"[hNHits]");
   G__memvar_setup((void*)((long)(&p->hDriftT)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"hDriftT[110]=",0,"[hNHits]");
   G__memvar_setup((void*)((long)(&p->hDriftD)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"hDriftD[110]=",0,"[hNHits]");
   G__memvar_setup((void*)((long)(&p->hFacnlADC)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"hFacnlADC[110]=",0,"[hNHits]");
   G__memvar_setup((void*)((long)(&p->hWireGain)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"hWireGain[110]=",0,"[hNHits]");
   G__memvar_setup((void*)((long)(&p->hTwodcor)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"hTwodcor[110]=",0,"[hNHits]");
   G__memvar_setup((void*)((long)(&p->hOnedcor)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"hOnedcor[110]=",0,"[hNHits]");
   G__memvar_setup((void*)((long)(&p->b_exp)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_exp=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_run)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_run=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_event)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_event=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_d0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_d0=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_z0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_z0=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_dz=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_dr=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dphi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_dphi=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_vx0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_vx0=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_vy0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_vy0=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_vz0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_vz0=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_tanlambda)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_tanlambda=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_phi0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_phi0=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_chi2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_chi2=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_nCDChits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_nCDChits=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_inCDC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_inCDC=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_track)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_track=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_length)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_length=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_charge)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_charge=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_costh)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_costh=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_pF)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_pF=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_p)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_p=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_pt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_pt=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ioasym)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_ioasym=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_phi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_phi=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_pdg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_pdg=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mean)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_mean=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dedx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_dedx=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dedxnosat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_dedxnosat=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_dedxerr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_dedxerr=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_eop)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_eop=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_e)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_e=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_e1_9)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_e1_9=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_e9_21)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_e9_21=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_klmLayers)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_klmLayers=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_scale)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_scale=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_coscor)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_coscor=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_cosedgecor)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_cosedgecor=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_rungain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_rungain=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_chiE)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_chiE=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_chiMu)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_chiMu=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_chiPi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_chiPi=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_chiK)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_chiK=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_chiP)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_chiP=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_chiD)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_chiD=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_pmeanE)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_pmeanE=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_pmeanMu)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_pmeanMu=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_pmeanPi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_pmeanPi=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_pmeanK)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_pmeanK=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_pmeanP)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_pmeanP=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_pmeanD)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_pmeanD=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_presE)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_presE=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_presMu)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_presMu=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_presPi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_presPi=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_presK)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_presK=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_presP)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_presP=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_presD)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_presD=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_lNHits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_lNHits=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_lNHitsUsed)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_lNHitsUsed=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_lNHitsCombined)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_lNHitsCombined=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_lWireLongestHit)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_lWireLongestHit=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_lLayer)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_lLayer=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_lPath)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_lPath=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_lDedx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_lDedx=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_hNHits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_hNHits=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_hLWire)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_hLWire=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_hWire)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_hWire=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_hLayer)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_hLayer=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_hPath)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_hPath=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_hDedx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_hDedx=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_hADCRaw)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_hADCRaw=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_hADCCorr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_hADCCorr=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_hDoca)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_hDoca=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_hNDoca)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_hNDoca=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_hNDocaRS)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_hNDocaRS=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_hEnta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_hEnta=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_hEntaRS)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_hEntaRS=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_hDriftT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_hDriftT=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_hDriftD)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_hDriftD=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_hFacnlADC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_hFacnlADC=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_hWireGain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_hWireGain=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_hTwodcor)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_hTwodcor=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_hOnedcor)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_TBranch),-1,-1,1,"b_hOnedcor=",0,"!");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTryit_C_ACLiC_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTryit(void) {
   /* Tryit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_Tryit));
   G__memfunc_setup("Tryit",540,G__Tryit_C_ACLiC_dict_2968_0_1, 105, G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_Tryit), -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 '0' tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cut",300,G__Tryit_C_ACLiC_dict_2968_0_2, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntry",818,G__Tryit_C_ACLiC_dict_2968_0_3, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadTree",784,G__Tryit_C_ACLiC_dict_2968_0_4, 110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__Tryit_C_ACLiC_dict_2968_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Loop",410,G__Tryit_C_ACLiC_dict_2968_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Notify",633,G__Tryit_C_ACLiC_dict_2968_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Show",417,G__Tryit_C_ACLiC_dict_2968_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 '-1' entry", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("Tryit", 540, G__Tryit_C_ACLiC_dict_2968_0_9, (int) ('i'), G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_Tryit), -1, 0, 1, 1, 1, 0, "u 'Tryit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Tryit", 666, G__Tryit_C_ACLiC_dict_2968_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Tryit_C_ACLiC_dict_2968_0_11, (int) ('u'), G__get_linked_tagnum(&G__Tryit_C_ACLiC_dictLN_Tryit), -1, 1, 1, 1, 1, 0, "u 'Tryit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTryit_C_ACLiC_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTryit_C_ACLiC_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTryit_C_ACLiC_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__Tryit_C_ACLiC_dictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__Tryit_C_ACLiC_dictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__Tryit_C_ACLiC_dictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__Tryit_C_ACLiC_dictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__Tryit_C_ACLiC_dictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__Tryit_C_ACLiC_dictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__Tryit_C_ACLiC_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__Tryit_C_ACLiC_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Tryit_C_ACLiC_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__Tryit_C_ACLiC_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Tryit_C_ACLiC_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__Tryit_C_ACLiC_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__Tryit_C_ACLiC_dictLN_Tryit = { "Tryit" , 99 , -1 };
G__linked_taginfo G__Tryit_C_ACLiC_dictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__Tryit_C_ACLiC_dictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__Tryit_C_ACLiC_dictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTryit_C_ACLiC_dict() {
  G__Tryit_C_ACLiC_dictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__Tryit_C_ACLiC_dictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__Tryit_C_ACLiC_dictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__Tryit_C_ACLiC_dictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__Tryit_C_ACLiC_dictLN_TBranch.tagnum = -1 ;
  G__Tryit_C_ACLiC_dictLN_TTree.tagnum = -1 ;
  G__Tryit_C_ACLiC_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__Tryit_C_ACLiC_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Tryit_C_ACLiC_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__Tryit_C_ACLiC_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Tryit_C_ACLiC_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__Tryit_C_ACLiC_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__Tryit_C_ACLiC_dictLN_Tryit.tagnum = -1 ;
  G__Tryit_C_ACLiC_dictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__Tryit_C_ACLiC_dictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__Tryit_C_ACLiC_dictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTryit_C_ACLiC_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__Tryit_C_ACLiC_dictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__Tryit_C_ACLiC_dictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__Tryit_C_ACLiC_dictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__Tryit_C_ACLiC_dictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Tryit_C_ACLiC_dictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__Tryit_C_ACLiC_dictLN_TTree);
   G__get_linked_tagnum_fwd(&G__Tryit_C_ACLiC_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__Tryit_C_ACLiC_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Tryit_C_ACLiC_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__Tryit_C_ACLiC_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Tryit_C_ACLiC_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__Tryit_C_ACLiC_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Tryit_C_ACLiC_dictLN_Tryit),sizeof(Tryit),-1,296192,(char*)NULL,G__setup_memvarTryit,G__setup_memfuncTryit);
   G__get_linked_tagnum_fwd(&G__Tryit_C_ACLiC_dictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__Tryit_C_ACLiC_dictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Tryit_C_ACLiC_dictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupTryit_C_ACLiC_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTryit_C_ACLiC_dict()");
  G__set_cpp_environmentTryit_C_ACLiC_dict();
  G__cpp_setup_tagtableTryit_C_ACLiC_dict();

  G__cpp_setup_inheritanceTryit_C_ACLiC_dict();

  G__cpp_setup_typetableTryit_C_ACLiC_dict();

  G__cpp_setup_memvarTryit_C_ACLiC_dict();

  G__cpp_setup_memfuncTryit_C_ACLiC_dict();
  G__cpp_setup_globalTryit_C_ACLiC_dict();
  G__cpp_setup_funcTryit_C_ACLiC_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTryit_C_ACLiC_dict();
  return;
}
class G__cpp_setup_initTryit_C_ACLiC_dict {
  public:
    G__cpp_setup_initTryit_C_ACLiC_dict() { G__add_setup_func("Tryit_C_ACLiC_dict",(G__incsetup)(&G__cpp_setupTryit_C_ACLiC_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTryit_C_ACLiC_dict() { G__remove_setup_func("Tryit_C_ACLiC_dict"); }
};
G__cpp_setup_initTryit_C_ACLiC_dict G__cpp_setup_initializerTryit_C_ACLiC_dict;

